#!/bin/bash

# √âtape 3 : V√©rification agent SSH
echo -e "\033[36müîç V√©rification si un agent SSH est actif\033[0m"
echo ""
SSH_ENV="$HOME/.ssh-agent.env"

# Fonction pour d√©marrer un nouvel agent SSH
start_agent() {
    echo ""
    echo "üîë D√©marrage d'un nouvel agent SSH..."
    echo ""
    eval "$(ssh-agent -s)" > "$SSH_ENV"
    echo "export SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> "$SSH_ENV"
    echo "export SSH_AGENT_PID=$SSH_AGENT_PID" >> "$SSH_ENV"
    ssh-add ~/.ssh/id_ed25519 > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "üîê Cl√© SSH ajout√©e avec succ√®s : ~/.ssh/id_ed25519"
    else
        echo "‚ùå √âchec lors de l'ajout de la cl√© SSH : ~/.ssh/id_ed25519"
    fi
}

# Recharger ou d√©marrer l'agent SSH
echo -e "\033[36müîÑ Recharger ou d√©marrer l'agent SSH\033[0m"
echo ""
if [ -f "$SSH_ENV" ]; then
    source "$SSH_ENV" > /dev/null
    if ! ps -p $SSH_AGENT_PID > /dev/null 2>&1; then
        start_agent
    fi
else
    start_agent
fi
echo -e "\033[34m‚úÖ Traitement agent SSH termin√©\033[0m"
echo ""

# √âtape 1 : Obtenir la branche actuelle
current_branch=$(git branch --show-current)

# V√©rifier si on est dans un d√©p√¥t Git
if [ -z "$current_branch" ]; then
  echo "‚ùå Erreur : vous n'√™tes pas dans un d√©p√¥t Git ou aucune branche n'est actuellement active."
  exit 1
fi

echo -e "\033[32mBranche actuelle : $current_branch\033[0m"
echo ""

# √âtape 2 : R√©cup√©rer toutes les nouvelles branches distantes
echo -e "\033[36müîÑ R√©cup√©ration des nouvelles branches distantes...\033[0m"
git fetch --all --prune
echo ""

# √âtape 3 : Synchroniser les branches locales avec les branches distantes
branches=$(git branch -r | grep -v '\->' | sed 's/origin\///')

echo -e "\033[36müîé Branches trouv√©es sur le d√©p√¥t distant :\033[0m"
for remote_branch in $branches; do
  if ! git branch --list | grep -q "$remote_branch"; then
    echo "üÜï Cr√©ation de la branche locale pour '$remote_branch'..."
    git checkout -b "$remote_branch" "origin/$remote_branch"
  fi
done
echo ""

# Mise √† jour de toutes les branches locales
for branch in $(git branch | sed 's/* //'); do
  echo -e "\033[33müîÑ Passage √† la branche : $branch\033[0m"
  git checkout $branch
  UPSTREAM=$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null)
  if [ $? -eq 0 ]; then
    echo "üì• Mise √† jour de la branche '$branch' avec '$UPSTREAM'..."
    git pull
  else
    echo "‚ö†Ô∏è  Pas de branche distante pour '$branch'. Ignor√©e."
  fi
  echo ""
done

# √âtape 4 : Revenir √† la branche initiale
git checkout $current_branch
echo -e "\033[32m‚úÖ Retour sur la branche initiale : $current_branch\033[0m"
